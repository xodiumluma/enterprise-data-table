{
  "name": "ag-grid-community",
  "version": "29.0.0",
  "description": "Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue",
  "main": "./main.js",
  "typings": "./main.d.ts",
  "repository": {
    "type": "git",
    "url": "https://github.com/ag-grid/ag-grid.git"
  },
  "private": true,
  "scripts": {
    "initSubModules": "sh ./scripts/initialiseSubModules.sh",
    "initMandatorySubModules": "sh ./scripts/initialiseMandatorySubModules.sh",
    "initLatest": "npm run initSubModules && sh ./scripts/switchToBranch.sh latest",
    "initLatestEssential": "npm run initMandatorySubModules && sh ./scripts/switchToBranch.sh latest && npm run initialUpdateAndRebuild",
    "initIntelliJ": "cp .idea/workspace.xml.default .idea/workspace.xml",
    "init": "npm run initLatest && npm run initialUpdateAndRebuild",
    "init-prod": "npm run initLatest && npm run updateAndRebuildProd",
    "updateMandatorySubModules": "sh ./scripts/updateMandatorySubModules.sh",
    "updateSubModules": "sh ./scripts/updateSubModules.sh",
    "clean": "npx lerna run clean && npx lerna clean --yes",
    "bootstrap": "node scripts/patchLerna.js && npx lerna bootstrap --no-ci",
    "bootstrap-single-thread": "npx lerna bootstrap --no-ci --concurrency 1",
    "build-tsc": "npx tsc --build",
    "build": "npx lerna run build",
    "build-prod": "npx lerna run build-prod",
    "package": "npx lerna run package --parallel --ignore '{ag-grid-community,ag-grid-enterprise,ag-grid-documentation,ag-grid-angular-cli-package-example,ag-grid-solid-package-example,ag-grid-react-package-example,ag-grid-vue2-package-example,ag-grid-vue3-package-example}' && npx lerna run package --scope '{ag-grid-community,ag-grid-enterprise,ag-grid-documentation,ag-grid-angular-cli-package-example,ag-grid-react-package-example,ag-grid-vue2-package-example,ag-grid-vue3-package-example,ag-grid-solid-package-example}'",
    "test": "npx lerna run test --stream",
    "cleanCoreDependencies": "npx lerna clean --yes --scope '{ag-grid-angular,ag-grid-solid,ag-grid-react,ag-grid-vue,ag-grid-docs}'",
    "bootstrapCoreDependencies": "npx lerna bootstrap --scope '{ag-grid-angular,ag-grid-solid,ag-grid-react,ag-grid-vue,ag-grid-docs}'",
    "buildCoreDependencies": "npx lerna run build --scope '{ag-grid-angular,ag-grid-solid,ag-grid-react,ag-grid-vue,ag-grid-docs}'",
    "cleanCommunityModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").cleanCommunityModules()'",
    "cleanEnterpriseModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").cleanEnterpriseModules()'",
    "cleanModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").cleanModules()'",
    "bootstrapCommunityModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").bootstrapCommunityModules()'",
    "bootstrapEnterpriseModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").bootstrapEnterpriseModules()'",
    "bootstrapModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").bootstrapModules()'",
    "buildCommunityModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").buildCommunityModules()'",
    "buildEnterpriseModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").buildEnterpriseModules()'",
    "buildModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").buildModules()'",
    "packageModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").packageModules()'",
    "packageCharts": "node -e 'require(\"./scripts/modules/lernaModules.js\").packageCharts()'",
    "buildLegacy": "npx lerna run build --scope '{ag-grid-community,ag-grid-enterprise,ag-grid-vue,ag-grid-react,ag-grid-vue3,ag-grid-angular,ag-grid-solid}'",
    "packageLegacy": "npx lerna run package --scope '{ag-grid-community,ag-grid-enterprise,ag-grid-vue,ag-grid-react,ag-grid-vue3,ag-grid-angular,ag-grid-solid}'",
    "buildChartsModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").buildChartsModules()'",
    "testCommunityModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").testCommunityModules()'",
    "testEnterpriseModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").testEnterpriseModules()'",
    "testModules": "node -e 'require(\"./scripts/modules/lernaModules.js\").testModules()'",
    "cleanLegacy": "npx lerna clean --scope '{ag-grid-community,ag-grid-enterprise}'",
    "bootstrapLegacy": "npx lerna bootstrap --scope '{ag-grid-community,ag-grid-enterprise}'",
    "buildAngular": "npx lerna run build --scope '{@ag-grid-community/core,@ag-grid-community/angular,ag-grid-angular}'",
    "buildVue": "npx lerna run build --scope '{@ag-grid-community/core,ag-grid-vue}'",
    "buildReact": "npx lerna run build --scope '{@ag-grid-community/core,ag-grid-react}'",
    "docs": "cd grid-packages/ag-grid-docs && npm start",
    "docs-core-only": "cd grid-packages/ag-grid-docs && npm run serve-core-only",
    "docs-charts-core-only": "cd grid-packages/ag-grid-docs && npm run serve-charts-core-only",
    "docs-serve-website-only": "cd grid-packages/ag-grid-docs && npm run serve-website-only",
    "docs-clean": "cd grid-packages/ag-grid-docs/documentation && npm run clean",
    "docsWithFormatting": "cd grid-packages/ag-grid-docs && npm run serve-with-formatting",
    "initialUpdateAndRebuild": "npm i && npm run bootstrap-single-thread && npm run build",
    "updateAndRebuild": "npm i && npm run bootstrap && npm run build",
    "updateAndRebuildProd": "npm i && npm run bootstrap && npm run build-prod",
    "cleanAndRebuild": "npm run clean && npm run updateAndRebuild",
    "buildChangedModules": "cd grid-packages/ag-grid-docs && node -e 'require(\"./lernaOperations.js\").rebuildBasedOnState()'",
    "buildAndUnitTest": "cd grid-packages/ag-grid-docs && node -e 'require(\"./lernaOperations.js\").rebuildAndUnitTestBasedOnState()'",
    "buildPackageAndFullyTest": "cd grid-packages/ag-grid-docs && node -e 'require(\"./lernaOperations.js\").rebuildAndTestsEverythingBasedOnState()'",
    "buildPackageNoTest": "cd grid-packages/ag-grid-docs && node -e 'require(\"./lernaOperations.js\").rebuildPackageSkipDocsBasedOnState()'",
    "ciUpdateBuildAndUnitTest": "npm i && npm run bootstrap && npm run buildAndUnitTest",
    "ciUpdateBuildPackageAndFullyTest": "npm i && npm run bootstrap && npm run buildPackageAndFullyTest",
    "ciUpdateRebuildAndPackage": "npm i && npm run bootstrap && npm run buildPackageNoTest",
    "ciUpdateRebuild": "npm i && npm run bootstrap && npm run buildChangedModules",
    "charts:init": "lerna bootstrap --include-dependents --include-dependencies --scope '*charts-{community,enterprise}*{,/*}' && npm run charts:run -- install-hooks && npm run charts:run -- build",
    "charts:run": "lerna run --stream --scope '*charts-{community,enterprise}*{,/*}' --scope 'ag-charts-enterprise-example'",
    "charts:build": "npm run charts:run -- build",
    "charts:watch": "cd charts-examples/ag-charts-enterprise-example && npm run watch",
    "charts:watch-bundle": "cd charts-examples/ag-charts-enterprise-example && npm run watch-bundle",
    "charts:lint": "npm run charts:run -- lint",
    "charts:fix": "npm run charts:run -- fix",
    "charts:test": "npm run charts:run -- test",
    "charts:docker-test-init": "npm run charts:run -- --concurrency 1 docker:init",
    "charts:docker-test-clean": "npm run charts:run -- --concurrency 1 docker:clean",
    "charts:docker-test-update": "npm run charts:run -- docker:test-update"
  },
  "devDependencies": {
    "@rollup/plugin-node-resolve": "^13.3.0",
    "@rollup/plugin-replace": "^4.0.0",
    "@types/node": "12.20.20",
    "command-line-args": "^5.1.1",
    "glob": "^7.1.6",
    "inquirer": "^7.0.0",
    "lerna": "^5.3.0",
    "nx": "^14.8.0",
    "rollup": "^2.74.1",
    "terser": "^4.3.9",
    "typescript": "~4.3.5"
  }
}
