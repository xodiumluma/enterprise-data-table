{
  "EVENT_MOVING_CHANGED": { "type": { "returnType": "ColumnEventName" } },
  "EVENT_LEFT_CHANGED": { "type": { "returnType": "ColumnEventName" } },
  "EVENT_WIDTH_CHANGED": { "type": { "returnType": "ColumnEventName" } },
  "EVENT_LAST_LEFT_PINNED_CHANGED": {
    "type": { "returnType": "ColumnEventName" }
  },
  "EVENT_FIRST_RIGHT_PINNED_CHANGED": {
    "type": { "returnType": "ColumnEventName" }
  },
  "EVENT_VISIBLE_CHANGED": { "type": { "returnType": "ColumnEventName" } },
  "EVENT_FILTER_CHANGED": { "type": { "returnType": "ColumnEventName" } },
  "EVENT_FILTER_ACTIVE_CHANGED": {
    "type": { "returnType": "ColumnEventName" }
  },
  "EVENT_SORT_CHANGED": { "type": { "returnType": "ColumnEventName" } },
  "EVENT_COL_DEF_CHANGED": { "type": { "returnType": "ColumnEventName" } },
  "EVENT_MENU_VISIBLE_CHANGED": { "type": { "returnType": "ColumnEventName" } },
  "EVENT_ROW_GROUP_CHANGED": { "type": { "returnType": "ColumnEventName" } },
  "EVENT_PIVOT_CHANGED": { "type": { "returnType": "ColumnEventName" } },
  "EVENT_VALUE_CHANGED": { "type": { "returnType": "ColumnEventName" } },
  "getInstanceId": { "type": { "arguments": {}, "returnType": "number" } },
  "setColDef": {
    "type": {
      "arguments": {
        "colDef": "ColDef",
        "userProvidedColDef": "ColDef | null"
      },
      "returnType": "void"
    }
  },
  "getUserProvidedColDef": {
    "description": "/** Returns the column definition provided by the application.\n     * This may not be correct, as items can be superseded by default column options.\n     * However it's useful for comparison, eg to know which application column definition matches that column.\n     */",
    "type": { "arguments": {}, "returnType": "ColDef | null" }
  },
  "setParent": {
    "type": { "arguments": { "parent": "ColumnGroup" }, "returnType": "void" }
  },
  "getParent": {
    "description": "/** Returns the parent column group, if column grouping is active. */",
    "type": { "arguments": {}, "returnType": "ColumnGroup" }
  },
  "setOriginalParent": {
    "type": {
      "arguments": { "originalParent": "ProvidedColumnGroup | null" },
      "returnType": "void"
    }
  },
  "getOriginalParent": {
    "type": { "arguments": {}, "returnType": "ProvidedColumnGroup | null" }
  },
  "resetActualWidth": {
    "type": {
      "arguments": { "source": "ColumnEventType = 'api'" },
      "returnType": "void"
    }
  },
  "isEmptyGroup": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isRowGroupDisplayed": {
    "type": { "arguments": { "colId": "string" }, "returnType": "boolean" }
  },
  "isPrimary": {
    "description": "/** Returns `true` if column is a primary column, `false` if secondary. Secondary columns are used for pivoting. */",
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "isFilterAllowed": {
    "description": "/** Returns `true` if column filtering is allowed. */",
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "isFieldContainsDots": {
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "isTooltipEnabled": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isTooltipFieldContainsDots": {
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "addEventListener": {
    "description": "/** Add an event listener to the column. */",
    "type": {
      "arguments": { "eventType": "ColumnEventName", "listener": "Function" },
      "returnType": "void"
    }
  },
  "removeEventListener": {
    "description": "/** Remove event listener from the column. */",
    "type": {
      "arguments": { "eventType": "ColumnEventName", "listener": "Function" },
      "returnType": "void"
    }
  },
  "createColumnFunctionCallbackParams": {
    "type": {
      "arguments": { "rowNode": "IRowNode" },
      "returnType": "ColumnFunctionCallbackParams"
    }
  },
  "isSuppressNavigable": {
    "type": { "arguments": { "rowNode": "IRowNode" }, "returnType": "boolean" }
  },
  "isCellEditable": {
    "description": "/** Returns `true` if the cell for this column is editable for the given `rowNode`, otherwise `false`.\n     */",
    "type": { "arguments": { "rowNode": "IRowNode" }, "returnType": "boolean" }
  },
  "isSuppressFillHandle": {
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "isAutoHeight": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isAutoHeaderHeight": {
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "isRowDrag": {
    "type": { "arguments": { "rowNode": "IRowNode" }, "returnType": "boolean" }
  },
  "isDndSource": {
    "type": { "arguments": { "rowNode": "IRowNode" }, "returnType": "boolean" }
  },
  "isCellCheckboxSelection": {
    "type": { "arguments": { "rowNode": "IRowNode" }, "returnType": "boolean" }
  },
  "isSuppressPaste": {
    "type": { "arguments": { "rowNode": "IRowNode" }, "returnType": "boolean" }
  },
  "isResizable": { "type": { "arguments": {}, "returnType": "boolean" } },
  "setMoving": {
    "type": {
      "arguments": {
        "moving": "boolean",
        "source": "ColumnEventType = \"api\""
      },
      "returnType": "void"
    }
  },
  "isMoving": { "type": { "arguments": {}, "returnType": "boolean" } },
  "getSort": {
    "description": "/** If sorting is active, returns the sort direction e.g. `'asc'` or `'desc'`. */",
    "type": { "arguments": {}, "returnType": "SortDirection | undefined" }
  },
  "setSort": {
    "type": {
      "arguments": {
        "sort": "SortDirection | undefined",
        "source": "ColumnEventType = \"api\""
      },
      "returnType": "void"
    }
  },
  "setMenuVisible": {
    "type": {
      "arguments": {
        "visible": "boolean",
        "source": "ColumnEventType = \"api\""
      },
      "returnType": "void"
    }
  },
  "isMenuVisible": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isSortAscending": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isSortDescending": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isSortNone": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isSorting": { "type": { "arguments": {}, "returnType": "boolean" } },
  "getSortIndex": {
    "type": { "arguments": {}, "returnType": "number | null | undefined" }
  },
  "setSortIndex": {
    "type": {
      "arguments": { "sortOrder?": "number | null" },
      "returnType": "void"
    }
  },
  "setAggFunc": {
    "type": {
      "arguments": { "aggFunc": "string | IAggFunc | null | undefined" },
      "returnType": "void"
    }
  },
  "getAggFunc": {
    "description": "/** If aggregation is set for the column, returns the aggregation function. */",
    "type": {
      "arguments": {},
      "returnType": "string | IAggFunc | null | undefined"
    }
  },
  "getLeft": { "type": { "arguments": {}, "returnType": "number | null" } },
  "getOldLeft": { "type": { "arguments": {}, "returnType": "number | null" } },
  "getRight": { "type": { "arguments": {}, "returnType": "number" } },
  "setLeft": {
    "type": {
      "arguments": {
        "left": "number | null",
        "source": "ColumnEventType = \"api\""
      }
    }
  },
  "isFilterActive": {
    "description": "/** Returns `true` if filter is active on the column. */",
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "setFilterActive": {
    "type": {
      "arguments": {
        "active": "boolean",
        "source": "ColumnEventType = \"api\"",
        "additionalEventAttributes?": "any"
      },
      "returnType": "void"
    }
  },
  "isHovered": {
    "description": "/** Returns `true` when this `Column` is hovered, otherwise `false` */",
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "setPinned": {
    "type": {
      "arguments": { "pinned": "ColumnPinnedType" },
      "returnType": "void"
    }
  },
  "setFirstRightPinned": {
    "type": {
      "arguments": {
        "firstRightPinned": "boolean",
        "source": "ColumnEventType = \"api\""
      },
      "returnType": "void"
    }
  },
  "setLastLeftPinned": {
    "type": {
      "arguments": {
        "lastLeftPinned": "boolean",
        "source": "ColumnEventType = \"api\""
      },
      "returnType": "void"
    }
  },
  "isFirstRightPinned": {
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "isLastLeftPinned": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isPinned": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isPinnedLeft": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isPinnedRight": { "type": { "arguments": {}, "returnType": "boolean" } },
  "getPinned": {
    "type": { "arguments": {}, "returnType": "ColumnPinnedType" }
  },
  "setVisible": {
    "type": {
      "arguments": {
        "visible": "boolean",
        "source": "ColumnEventType = \"api\""
      },
      "returnType": "void"
    }
  },
  "isVisible": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isSpanHeaderHeight": {
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "getColDef": {
    "description": "/** Returns the column definition for this column.\n     * The column definition will be the result of merging the application provided column definition with any provided defaults\n     * (e.g. `defaultColDef` grid option, or column types.\n     *\n     * Equivalent: `getDefinition` */",
    "type": { "arguments": {}, "returnType": "ColDef" }
  },
  "getColumnGroupShow": {
    "type": { "arguments": {}, "returnType": "ColumnGroupShowType | undefined" }
  },
  "getColId": {
    "description": "/** Returns the unique ID for the column.\n     *\n     * Equivalent: `getId`, `getUniqueId` */",
    "type": { "arguments": {}, "returnType": "string" }
  },
  "getId": {
    "description": "/** Returns the unique ID for the column.\n     *\n     * Equivalent: `getColId`, `getUniqueId` */",
    "type": { "arguments": {}, "returnType": "string" }
  },
  "getUniqueId": {
    "description": "/** Returns the unique ID for the column.\n     *\n     * Equivalent: `getColId`, `getId` */",
    "type": { "arguments": {}, "returnType": "string" }
  },
  "getDefinition": {
    "type": { "arguments": {}, "returnType": "AbstractColDef" }
  },
  "getActualWidth": {
    "description": "/** Returns the current width of the column. If the column is resized, the actual width is the new size. */",
    "type": { "arguments": {}, "returnType": "number" }
  },
  "getAutoHeaderHeight": {
    "type": { "arguments": {}, "returnType": "number | null" }
  },
  "setAutoHeaderHeight": {
    "description": "/** Returns true if the header height has changed */",
    "type": { "arguments": { "height": "number" }, "returnType": "boolean" }
  },
  "getColSpan": {
    "type": { "arguments": { "rowNode": "IRowNode" }, "returnType": "number" }
  },
  "getRowSpan": {
    "type": { "arguments": { "rowNode": "IRowNode" }, "returnType": "number" }
  },
  "setActualWidth": {
    "type": {
      "arguments": {
        "actualWidth": "number",
        "source": "ColumnEventType = \"api\"",
        "silent": "boolean = false"
      },
      "returnType": "void"
    }
  },
  "fireColumnWidthChangedEvent": {
    "type": {
      "arguments": { "source": "ColumnEventType" },
      "returnType": "void"
    }
  },
  "isGreaterThanMax": {
    "type": { "arguments": { "width": "number" }, "returnType": "boolean" }
  },
  "getMinWidth": {
    "type": { "arguments": {}, "returnType": "number | null | undefined" }
  },
  "getMaxWidth": {
    "type": { "arguments": {}, "returnType": "number | null | undefined" }
  },
  "getFlex": { "type": { "arguments": {}, "returnType": "number" } },
  "setFlex": { "type": { "arguments": { "flex": "number | null" } } },
  "setMinimum": {
    "type": {
      "arguments": { "source": "ColumnEventType = \"api\"" },
      "returnType": "void"
    }
  },
  "setRowGroupActive": {
    "type": {
      "arguments": {
        "rowGroup": "boolean",
        "source": "ColumnEventType = \"api\""
      },
      "returnType": "void"
    }
  },
  "isRowGroupActive": {
    "description": "/** Returns `true` if row group is currently active for this column. */",
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "setPivotActive": {
    "type": {
      "arguments": {
        "pivot": "boolean",
        "source": "ColumnEventType = \"api\""
      },
      "returnType": "void"
    }
  },
  "isPivotActive": {
    "description": "/** Returns `true` if pivot is currently active for this column. */",
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "isAnyFunctionActive": {
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "isAnyFunctionAllowed": {
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "setValueActive": {
    "type": {
      "arguments": {
        "value": "boolean",
        "source": "ColumnEventType = \"api\""
      },
      "returnType": "void"
    }
  },
  "isValueActive": {
    "description": "/** Returns `true` if value (aggregation) is currently active for this column. */",
    "type": { "arguments": {}, "returnType": "boolean" }
  },
  "isAllowPivot": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isAllowValue": { "type": { "arguments": {}, "returnType": "boolean" } },
  "isAllowRowGroup": { "type": { "arguments": {}, "returnType": "boolean" } },
  "getMenuTabs": {
    "type": {
      "arguments": { "defaultValues": "ColumnMenuTab[]" },
      "returnType": "ColumnMenuTab[]"
    }
  }
}
