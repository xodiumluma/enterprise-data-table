@use "sass:map";
@use "../../design-system/" as *;

.header {
    display: flex;
    align-items: center;
    position: relative;
    background-color: var(--site-header-background);
}

.headerInner {
    display: flex;
    flex-wrap: wrap;

    padding-left: 0 !important; // !important needed because of .ag-styles specificity
    padding-right: 0 !important; // !important needed because of .ag-styles specificity

    @media screen and (min-width: $breakpoint-site-header-small) {
        flex-wrap: unset;
    }
}

.headerLogo {
    display: block;
    padding: $size-1 10px;

    @media screen and (min-width: $breakpoint-page-margin-padding) {
        margin-left: calc(
            var(--horizontal-margin) - 16px
        ) !important; // !important needed because of .ag-styles specificity
    }
}

.mobileMenuButton {
    --button-color: transparent;
    --border-radius: 0;
    --button-hover-color: #{rgba(map.get($abstract-colors, ag-grid-dark-blue), 0.6666)}; // needed for .ag-styles specificity

    appearance: none;
    display: flex;
    justify-content: center;
    align-items: center;
    height: $site-header-height;
    margin-left: auto !important; // !important for .ag-styles specificity
    padding: 0 16px 0 14px !important; // !important for .ag-styles specificity
    border: none !important; // !important for .ag-styles specificity
    transition: background-color 0.4s ease-in-out;

    &:focus {
        box-shadow: none !important; // !important for .ag-styles specificity
    }

    &:focus-visible {
        box-shadow: inset 0 0 0 2px var(--button-focus-box-shadow-color) !important; // !important for .ag-styles specificity
    }

    &[aria-expanded='true'],
    &:hover[aria-expanded='true'] {
        background-color: var(--site-nav-background);
    }

    svg {
        position: relative;
        left: 1px;
    }

    @media screen and (min-width: $breakpoint-page-margin-padding) {
        padding-right: calc(var(--horizontal-margin)) !important; // !important needed because of .ag-styles specificity
    }

    @media screen and (min-width: $breakpoint-site-header-small) {
        display: none !important; // !important for .ag-styles specificity
    }
}

.menuIcon {
    g {
        transition: transform 0.2s 0.2s;
    }

    rect {
        fill: #fff;
        transition: transform 0.2s;
    }

    :global(.middle) {
        transition: opacity 0s 0.2s;
    }

    :global(.top) rect {
        transform-origin: center 8px;
    }

    :global(.bottom) rect {
        transform-origin: center 28px;
    }

    .mobileMenuButton[aria-expanded='true'] & {
        g {
            transition: transform 0.2s;
        }

        rect {
            transition: transform 0.2s 0.2s;
        }

        :global(.top) {
            transform: translateY(10px);
        }

        :global(.top) rect {
            transform: rotate(45deg);
        }

        :global(.middle) {
            opacity: 0;
        }

        :global(.bottom) {
            transform: translateY(-10px);
        }

        :global(.bottom) rect {
            transform: rotate(-45deg);
        }
    }
}

.nav {
    &.collapse:not(.show) {
        display: none;
    }

    &.collapsing {
        position: relative;
        height: 0;
        overflow: hidden;
        transition: height 0.35s ease-in-out;

        @media (prefers-reduced-motion: reduce) {
            transition: none;
        }
    }

    @media screen and (min-width: $breakpoint-site-header-small) {
        display: block !important; // !important needed to override bootstrap
        overflow: visible !important; // !important needed to override bootstrap
    }
}

.nav {
    --text-color: var(--white);
    --link-color: var(--white);
    --link-hover-color: var(--white);

    width: 100%;
    margin-left: auto !important; // !important for .ag-styles specificity
    background-color: var(--site-nav-background);

    @media screen and (min-width: $breakpoint-site-header-small) {
        margin-right: calc(var(--horizontal-margin) - 17px) !important; // !important for .ag-styles specificity
        width: unset;
        background-color: unset;
    }

    @media screen and (min-width: $breakpoint-size-header-medium) {
        margin-right: calc(var(--horizontal-margin) - 27px) !important; // !important for .ag-styles specificity
    }
}

.navItemList {
    @media screen and (min-width: $breakpoint-site-header-small) {
        display: flex;
        height: $site-header-height;
        align-items: center;
    }
}

.navItem {
    &:not(:last-child) {
        border-bottom: 1px solid var(--site-header-background);
    }

    @media screen and (min-width: $breakpoint-site-header-small) {
        &:hover a::after {
            opacity: 0.25;
            transform: scaleX(1);
        }

        &.navItemActive a::after {
            opacity: 0.5;
            transform: scaleX(1);
        }
    }
}

.navLink {
    --horizontal-padding: #{$size-2};

    display: block;
    position: relative;
    padding: 10px 14px 11px;
    font-weight: 500;
    letter-spacing: 0.01em;
    color: var(--link-color);

    &:hover {
        text-decoration: none;
        color: var(--link-color);
    }

    @media screen and (min-width: $breakpoint-site-header-small) {
        padding-left: var(--horizontal-padding);
        padding-right: var(--horizontal-padding);

        &::after {
            content: '';
            position: absolute;
            height: 3px;
            bottom: 4px;
            left: var(--horizontal-padding);
            right: var(--horizontal-padding);
            border-radius: 2px;
            background-color: var(--link-color);
            opacity: 0;
            transform: scaleX(0);
            transition: transform 0.33s ease-in-out, opacity 0.33s ease-in-out;
        }
    }

    @media screen and (min-width: $breakpoint-size-header-medium) {
        --horizontal-padding: #{$size-3};

        font-size: 18px;
    }
}

.github-item a {
    display: inline-block;
    position: relative;
    padding-left: 48px;

    &::after {
        display: none;
    }

    svg {
        --icon-size: 30px !important; // !important for .ag-styles specificity

        display: block;
        position: absolute;
        top: 7px;
        left: 13px;
        border-radius: 50%;
    }

    @media screen and (min-width: $breakpoint-site-header-small) {
        padding-left: 24px;

        &:hover svg {
            box-shadow: 0 0 0 3px var(--site-header-background), 0 0 0 6px rgba(white, 0.3);
        }

        svg {
            position: relative;
            top: 2px;
            left: 0;
            transition: box-shadow 0.25s ease-in-out;
        }

        span {
            display: none;
        }
    }
}
